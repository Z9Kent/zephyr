
// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels


// /delete-node/ &slot1_partition;

&sercom1 {
	w25q128: w25q128jv@0 {
			compatible = "jedec,spi-nor";
			reg = <0>;
			spi-max-frequency = <8000000>;
			jedec-id = [17 70 18];
/* 			sfdp-bfp = [e5 20 f1 ff ff ff ff 03 44 eb 08 6b
						08 3b 04 bb ee ff ff ff ff ff 00 ff
						ff ff 00 ff 0c 20 0f 52 10 d8 00 ff
						23 72 f5 00 82 ed 04 cc 44 83 68 44
						30 b0 30 b0 f7 c4 d5 5c 00 be 29 ff
						f0 d0 ff ff];
*/
			size = <134217728>;
			has-dpd;
			t-enter-dpd = <10000>;
			t-exit-dpd = <35000>;
	};
};

&w25q128 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

        storage_partition: partition@20000 {
                label = "storage";
                reg = <0x00020000 0x00008000>;
        };
		event_normal_partition: partition@28000 {
			label = "event-normal";
			reg = <0x00028000 0x0008000>;
		};
		event_priority_partition: partition@30000 {
			label = "event-priority";
			reg = <0x00030000 0x0008000>;
		};
		credentials: partition@38000 {
			label = "credentials";
			reg = <0x00038000 0x0008000>;
		};
    };
};


// set UART1 to standard Arduino PINs
/ {
aliases { z9io-serial = &sercom2; };
};

&sercom2 {
    current-speed = <9600>;
    status = "okay";
};

/* 
&uart1_default {
group1 {
   psels = <NRF_PSEL(UART_RX, 1, 2)>;
   bias-pull-up;
};
group2 {
   psels = <NRF_PSEL(UART_TX , 1, 1)>,
		   <NRF_PSEL(UART_RTS, 1, 3)>;
};
};

&uart1_sleep {
group1 {
   psels = <NRF_PSEL(UART_RX , 1, 2)>,
		   <NRF_PSEL(UART_TX , 1, 1)>,
		   <NRF_PSEL(UART_RTS, 1, 3)>;
   low-power-enable;
};
};
*/